Module contains POD
Package name : Vim::Perl$S_ = undef;
$S_ = undef;
$S_ = undef;
$S_ = undef;
$S_ = undef;
$S_ = undef;
$S_ = undef;
$S_ = undef;
$S_ = undef;
$S_ = undef;
$S_ = undef;
$S_ = undef;
$S_ = undef;
$S_ = undef;
$S_ = undef;
PPI::Document
  PPI::Statement::Package
    PPI::Token::Word  	'package'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Vim::Perl'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Include
    PPI::Token::Word  	'use'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'strict'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Include
    PPI::Token::Word  	'use'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'warnings'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Include
    PPI::Token::Word  	'use'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Exporter'
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Include
    PPI::Token::Word  	'use'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'vars'
    PPI::Token::Whitespace  	' '
    PPI::Token::QuoteLike::Words  	'qw($VERSION @ISA @EXPORT @EXPORT_OK %EXPORT_TAGS)'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Include
    PPI::Token::Word  	'use'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'File::Spec::Functions'
    PPI::Token::Whitespace  	' '
    PPI::Token::QuoteLike::Words  	'qw(catfile rel2abs curdir catdir )'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Include
    PPI::Token::Word  	'use'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'File::Dat::Utils'
    PPI::Token::Whitespace  	' '
    PPI::Token::QuoteLike::Words  	'qw( readarr )'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Include
    PPI::Token::Word  	'use'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Text::TabularDisplay'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Include
    PPI::Token::Word  	'use'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Data::Dumper'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Include
    PPI::Token::Word  	'use'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'File::Basename'
    PPI::Token::Whitespace  	' '
    PPI::Token::QuoteLike::Words  	'qw(basename dirname)'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Include
    PPI::Token::Word  	'use'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'File::Slurp'
    PPI::Token::Whitespace  	' '
    PPI::Token::QuoteLike::Words  	'qw(\n  append_file\n  edit_file\n  edit_file_lines\n  read_file\n  write_file\n  prepend_file\n)'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement
    PPI::Token::Symbol  	'$VERSION'
    PPI::Token::Whitespace  	' '
    PPI::Token::Operator  	'='
    PPI::Token::Whitespace  	' '
    PPI::Token::Quote::Single  	''0.01''
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement
    PPI::Token::Symbol  	'@ISA'
    PPI::Token::Whitespace  	'     '
    PPI::Token::Operator  	'='
    PPI::Token::Whitespace  	' '
    PPI::Token::QuoteLike::Words  	'qw(Exporter)'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement
    PPI::Token::Symbol  	'@EXPORT'
    PPI::Token::Whitespace  	' '
    PPI::Token::Operator  	'='
    PPI::Token::Whitespace  	' '
    PPI::Token::QuoteLike::Words  	'qw()'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'my'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'@ex_vars_scalar'
    PPI::Token::Whitespace  	' '
    PPI::Token::Operator  	'='
    PPI::Token::Whitespace  	' '
    PPI::Token::QuoteLike::Words  	'qw(\n  $ArgString\n  $NumArgs\n  $MsgColor\n  $MsgPrefix\n  $MsgDebug\n  $ModuleName\n  $SubName\n  $FullSubName\n  $CurBuf\n  $UnderVim\n  $PAPINFO\n)'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'my'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'@ex_vars_hash'
    PPI::Token::Whitespace  	' '
    PPI::Token::Operator  	'='
    PPI::Token::Whitespace  	' '
    PPI::Token::QuoteLike::Words  	'qw(\n  %VDIRS\n  %VFILES\n)'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'my'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'@ex_vars_array'
    PPI::Token::Whitespace  	' '
    PPI::Token::Operator  	'='
    PPI::Token::Whitespace  	' '
    PPI::Token::QuoteLike::Words  	'qw(\n  @BUFLIST\n  @BFILES\n  @Args\n  @NamedArgs\n  @PIECES\n  @LOCALMODULES\n)'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement
    PPI::Token::Symbol  	'%EXPORT_TAGS'
    PPI::Token::Whitespace  	' '
    PPI::Token::Operator  	'='
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Expression
        PPI::Token::Quote::Single  	''funcs''
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'=>'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Constructor  	[ ... ]
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::QuoteLike::Words  	'qw(\n          _die\n          init\n          init_Args\n          init_PIECES\n          VimArg\n          VimBufFiles_Insert_SubName\n          VimChooseFromPrompt\n          VimCreatePrompt\n          VimCurBuf_Basename\n          VimCurBuf_Name\n          VimCurBuf_Num\n          VimCmd\n          VimEcho\n          VimEditBufFiles\n          VimEval\n          VimExists\n          VimPerlGetModuleName\n          VimGetFromChooseDialog\n          VimGetLine\n          VimSetLine\n          VimAppend\n          VimGrep\n          VimInput\n          VimJoin\n          VimLen\n          VimLet\n          VimLetEval\n          VimSet\n          VimStrToOpts\n          VimMsg\n          VimMsgDebug\n          VimMsgE\n          VimMsgNL\n          Vim_MsgColor\n          Vim_MsgPrefix\n          Vim_MsgDebug\n          Vim_Files\n          Vim_Files_DAT\n          VimPerlInstallModule\n          VimPerlViewModule\n          VimPerlModuleNameFromPath\n          VimPerlPathFromModuleName\n          VimPerlGetModuleNameFromDialog\n          VimPieceFullFile\n          VimResetVars\n          VimQuickFixList\n          VimSo\n          VimSetTags\n          VimVar\n          VimVarEcho\n          VimVarType\n          VimVarDump\n          )'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Operator  	','
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Quote::Single  	''vars''
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'=>'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Constructor  	[ ... ]
          PPI::Token::Whitespace  	' '
          PPI::Statement
            PPI::Token::Symbol  	'@ex_vars_scalar'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'@ex_vars_array'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'@ex_vars_hash'
          PPI::Token::Whitespace  	' '
      PPI::Token::Whitespace  	'\n'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'_die'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'init'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'init_Args'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'init_PIECES'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimArg'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimCurBuf_Basename'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimCurBuf_Name'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimCurBuf_Num'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimBufFiles_Insert_SubName'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimCmd'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimChooseFromPrompt'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimCreatePrompt'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimEcho'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimEditBufFiles'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimEval'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimExists'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimGetFromChooseDialog'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimGetLine'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimSetLine'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimAppend'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimGrep'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimInput'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimJoin'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimLet'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimLetEval'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimSet'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimMsg'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimMsgNL'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimMsgDebug'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimMsgE'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimMsgPack'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimMsg_PE'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPerlGetModuleName'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPerlInstallModule'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPerlViewModule'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPerlModuleNameFromPath'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPerlPathFromModuleName'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPerlGetModuleNameFromDialog'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPieceFullFile'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimResetVars'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimQuickFixList'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimSo'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimStrToOpts'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimSetTags'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimVar'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimVarEcho'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimVarType'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimVarDump'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimLen'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Vim_Files'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Vim_Files_DAT'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Vim_MsgColor'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Vim_MsgPrefix'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Vim_MsgDebug'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'@EXPORT_OK'
    PPI::Token::Whitespace  	' '
    PPI::Token::Operator  	'='
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
      PPI::Token::Whitespace  	' '
      PPI::Statement::Expression
        PPI::Token::Cast  	'@'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	' '
          PPI::Statement
            PPI::Token::Symbol  	'$EXPORT_TAGS'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Quote::Single  	''funcs''
          PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	','
        PPI::Token::Whitespace  	' '
        PPI::Token::Cast  	'@'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	' '
          PPI::Statement
            PPI::Token::Symbol  	'$EXPORT_TAGS'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Quote::Single  	''vars''
          PPI::Token::Whitespace  	' '
      PPI::Token::Whitespace  	' '
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'@EXPORT'
    PPI::Token::Whitespace  	'    '
    PPI::Token::Operator  	'='
    PPI::Token::Whitespace  	' '
    PPI::Token::QuoteLike::Words  	'qw( )'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'$VERSION'
    PPI::Token::Whitespace  	'   '
    PPI::Token::Operator  	'='
    PPI::Token::Whitespace  	' '
    PPI::Token::Quote::Single  	''0.01''
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'$UnderVim'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'$ArgString'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
      PPI::Statement::Expression
        PPI::Token::Symbol  	'$NumArgs'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
      PPI::Token::Whitespace  	' '
      PPI::Statement::Expression
        PPI::Token::Symbol  	'$EvalCode'
        PPI::Token::Operator  	','
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$res'
      PPI::Token::Whitespace  	' '
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
      PPI::Statement::Expression
        PPI::Token::Symbol  	'$SubName'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'        '
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
      PPI::Statement::Expression
        PPI::Token::Symbol  	'$FullSubName'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'    '
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
      PPI::Statement::Expression
        PPI::Token::Symbol  	'$CurBuf'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
      PPI::Statement::Expression
        PPI::Token::Symbol  	'$MsgColor'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
      PPI::Statement::Expression
        PPI::Token::Symbol  	'$MsgPrefix'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
      PPI::Statement::Expression
        PPI::Token::Symbol  	'$MsgDebug'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
      PPI::Statement::Expression
        PPI::Token::Symbol  	'$ModuleName'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'@BUFLIST'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'@BFILES'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'@PIECES'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'@LOCALMODULES'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
      PPI::Token::Whitespace  	' '
      PPI::Statement::Expression
        PPI::Token::Symbol  	'@Args'
        PPI::Token::Operator  	','
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'@NamedArgs'
      PPI::Token::Whitespace  	' '
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Structure::List  	( ... )
      PPI::Statement::Expression
        PPI::Token::Symbol  	'@INITIDS'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'%VDIRS'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'%VFILES'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Variable
    PPI::Token::Word  	'our'
    PPI::Token::Whitespace  	' '
    PPI::Token::Symbol  	'$PAPINFO'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimCmd'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$cmd'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VIM::DoCommand'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"$cmd"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimArg'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$num'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$arg'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimEval'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"a:$num"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$arg'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimSo'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$file'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$file'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimCmd'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"source $file"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimLen'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$name'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$len'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Number  	'0'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'VimExists'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$name'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$len'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'VimEval'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"len($name)"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$len'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimVar'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$var'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimExists'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$var'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$res'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$vartype'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimVarType'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$var'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'for'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Statement
            PPI::Token::Symbol  	'$vartype'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Regexp::Match  	'/^(String|Number|Float)$/'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'&&'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'do'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Symbol  	'$res'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'VimEval'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$var'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\n            '
              PPI::Statement::Break
                PPI::Token::Word  	'next'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Regexp::Match  	'/^List$/'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'&&'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'do'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement::Variable
                PPI::Token::Word  	'my'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$len'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'VimEval'
                PPI::Structure::List  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Expression
                    PPI::Token::Quote::Single  	''len(''
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'.'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'$var'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'.'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Quote::Single  	'')''
                  PPI::Token::Whitespace  	' '
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement::Variable
                PPI::Token::Word  	'my'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$i'
                PPI::Token::Whitespace  	'   '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Number  	'0'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Symbol  	'$res'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Structure::Constructor  	[ ... ]
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\n            '
              PPI::Statement::Compound
                PPI::Token::Word  	'while'
                PPI::Token::Whitespace  	' '
                PPI::Structure::Condition  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$i'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'<'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'$len'
                  PPI::Token::Whitespace  	' '
                PPI::Token::Whitespace  	' '
                PPI::Structure::Block  	{ ... }
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'                '
                  PPI::Statement::Variable
                    PPI::Token::Word  	'my'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'@v'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'='
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Word  	'split'
                    PPI::Structure::List  	( ... )
                      PPI::Token::Whitespace  	' '
                      PPI::Statement::Expression
                        PPI::Token::Quote::Double  	'"\n"'
                        PPI::Token::Operator  	','
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Word  	'VimEval'
                        PPI::Structure::List  	( ... )
                          PPI::Token::Whitespace  	' '
                          PPI::Statement::Expression
                            PPI::Token::Symbol  	'$var'
                            PPI::Token::Whitespace  	' '
                            PPI::Token::Operator  	'.'
                            PPI::Token::Whitespace  	' '
                            PPI::Token::Quote::Single  	''[''
                            PPI::Token::Whitespace  	' '
                            PPI::Token::Operator  	'.'
                            PPI::Token::Whitespace  	' '
                            PPI::Token::Symbol  	'$i'
                            PPI::Token::Whitespace  	' '
                            PPI::Token::Operator  	'.'
                            PPI::Token::Whitespace  	' '
                            PPI::Token::Quote::Single  	'']''
                          PPI::Token::Whitespace  	' '
                      PPI::Token::Whitespace  	' '
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'                '
                  PPI::Statement::Variable
                    PPI::Token::Word  	'my'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'$first'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'='
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Word  	'shift'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'@v'
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'\n                '
                  PPI::Statement::Compound
                    PPI::Token::Word  	'if'
                    PPI::Token::Whitespace  	' '
                    PPI::Structure::Condition  	( ... )
                      PPI::Statement::Expression
                        PPI::Token::Symbol  	'@v'
                    PPI::Token::Whitespace  	' '
                    PPI::Structure::Block  	{ ... }
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                    '
                      PPI::Statement
                        PPI::Token::Symbol  	'$res'
                        PPI::Token::Operator  	'->'
                        PPI::Structure::Subscript  	[ ... ]
                          PPI::Statement::Expression
                            PPI::Token::Symbol  	'$i'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'='
                        PPI::Token::Whitespace  	' '
                        PPI::Structure::Constructor  	[ ... ]
                          PPI::Token::Whitespace  	' '
                          PPI::Statement
                            PPI::Token::Symbol  	'$first'
                            PPI::Token::Operator  	','
                            PPI::Token::Whitespace  	' '
                            PPI::Token::Symbol  	'@v'
                          PPI::Token::Whitespace  	' '
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                '
                    PPI::Token::Whitespace  	'\n'
                    PPI::Token::Whitespace  	'                '
                    PPI::Token::Word  	'else'
                    PPI::Token::Whitespace  	' '
                    PPI::Structure::Block  	{ ... }
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                    '
                      PPI::Statement
                        PPI::Token::Symbol  	'$res'
                        PPI::Token::Operator  	'->'
                        PPI::Structure::Subscript  	[ ... ]
                          PPI::Statement::Expression
                            PPI::Token::Symbol  	'$i'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'='
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Symbol  	'$first'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                '
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'\n                '
                  PPI::Statement
                    PPI::Token::Symbol  	'$i'
                    PPI::Token::Operator  	'++'
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'            '
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\n            '
              PPI::Statement::Break
                PPI::Token::Word  	'next'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Regexp::Match  	'/^Dictionary$/'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'&&'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'do'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Symbol  	'$res'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Structure::Constructor  	{ ... }
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement::Variable
                PPI::Token::Word  	'my'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'@keys'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'VimEval'
                PPI::Structure::List  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Expression
                    PPI::Token::Quote::Single  	''keys(''
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'.'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'$var'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'.'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Quote::Single  	'')''
                  PPI::Token::Whitespace  	' '
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\n            '
              PPI::Statement::Compound
                PPI::Token::Word  	'foreach'
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'my'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$k'
                PPI::Token::Whitespace  	' '
                PPI::Structure::List  	( ... )
                  PPI::Statement
                    PPI::Token::Symbol  	'@keys'
                PPI::Token::Whitespace  	' '
                PPI::Structure::Block  	{ ... }
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'                '
                  PPI::Statement
                    PPI::Token::Symbol  	'$res'
                    PPI::Token::Operator  	'->'
                    PPI::Structure::Subscript  	{ ... }
                      PPI::Statement::Expression
                        PPI::Token::Symbol  	'$k'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'='
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Word  	'VimEval'
                    PPI::Structure::List  	( ... )
                      PPI::Token::Whitespace  	' '
                      PPI::Statement::Expression
                        PPI::Token::Symbol  	'$var'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'.'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Quote::Double  	'"['"'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'.'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Symbol  	'$k'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'.'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Quote::Double  	'"']"'
                      PPI::Token::Whitespace  	' '
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'            '
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\n            '
              PPI::Statement::Break
                PPI::Token::Word  	'next'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$res'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$res'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'elsif'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$res'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"ARRAY"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'wantarray'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'?'
            PPI::Token::Whitespace  	' '
            PPI::Token::Cast  	'@'
            PPI::Token::Symbol  	'$res'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	':'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$res'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'elsif'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$res'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"HASH"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'wantarray'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'?'
            PPI::Token::Whitespace  	' '
            PPI::Token::Cast  	'%'
            PPI::Token::Symbol  	'$res'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	':'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$res'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimVarDump'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$var'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$ref'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimVar'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$var'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimMsg'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"--------------------------------------"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'VimMsg'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"Type of Vim variable $var : "'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'VimVarType'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$var'
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'VimMsg'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"Contents of Vim variable $var :"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'VimMsg'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'Data::Dumper'
            PPI::Token::Operator  	'->'
            PPI::Token::Word  	'Dump'
            PPI::Structure::List  	( ... )
              PPI::Statement
                PPI::Token::Whitespace  	' '
                PPI::Structure::Constructor  	[ ... ]
                  PPI::Token::Whitespace  	' '
                  PPI::Statement
                    PPI::Token::Symbol  	'$ref'
                  PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Structure::Constructor  	[ ... ]
                  PPI::Token::Whitespace  	' '
                  PPI::Statement
                    PPI::Token::Symbol  	'$var'
                  PPI::Token::Whitespace  	' '
              PPI::Token::Whitespace  	' '
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimVarEcho'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$var'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$ref'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimVar'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$var'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$str'
        PPI::Token::Operator  	'='
        PPI::Token::Quote::Single  	''''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$str'
            PPI::Token::Operator  	'='
            PPI::Token::Symbol  	'$ref'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'elsif'
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"ARRAY"'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$str'
            PPI::Token::Operator  	'.='
            PPI::Token::Quote::Double  	'"[ '"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$str'
            PPI::Token::Operator  	'.='
            PPI::Token::Word  	'join'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"', '"'
                PPI::Token::Operator  	','
                PPI::Token::Cast  	'@'
                PPI::Token::Symbol  	'$ref'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$str'
            PPI::Token::Operator  	'.='
            PPI::Token::Quote::Double  	'"' ]"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'elsif'
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"HASH"'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$str'
            PPI::Token::Operator  	'.='
            PPI::Token::Quote::Double  	'"{ "'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Compound
            PPI::Token::Word  	'while'
            PPI::Structure::Condition  	( ... )
              PPI::Statement::Variable
                PPI::Token::Word  	'my'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$k'
                    PPI::Token::Operator  	','
                    PPI::Token::Symbol  	'$v'
                PPI::Token::Operator  	'='
                PPI::Token::Word  	'each'
                PPI::Token::Whitespace  	' '
                PPI::Token::Cast  	'%'
                PPI::Structure::Block  	{ ... }
                  PPI::Statement
                    PPI::Token::Symbol  	'$ref'
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Symbol  	'$str'
                PPI::Token::Operator  	'.='
                PPI::Token::Quote::Double  	'"'"'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$k'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"': '"'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$v'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"',"'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$str'
            PPI::Token::Operator  	'.='
            PPI::Token::Quote::Double  	'" }"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimMsg'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$str'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimVarType'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$var'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''_NOT_EXIST_''
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimExists'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$var'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$vimcode'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::HereDoc  	'<<"EOV"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'VimCmd'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"$vimcode"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimEval'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''type''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimGrep'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$pat'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$ref'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'@files'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'elsif'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"ARRAY"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'@files'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Cast  	'@'
            PPI::Token::Symbol  	'$ref'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimCmd'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"vimgrep /$pat/ @files"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Number  	'1'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimEcho'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$cmd'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimMsg'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'VimEval'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$cmd'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Structure::Constructor  	{ ... }
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Word  	'prefix'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'=>'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Single  	''none''
              PPI::Token::Whitespace  	' '
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimEval'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$cmd'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Statement
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'\n    '
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$EvalCode'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$res'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VIM::Eval'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"$cmd"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$EvalCode'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'_die'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"VIM::Eval evaluation failed for command: $cmd"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$res'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimExists'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$expr'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Statement
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'\n    '
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$EvalCode'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$res'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VIM::Eval'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''exists("''
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$expr'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''")''
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$res'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimMsgPack'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$text'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VIM::Msg'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'__PACKAGE__'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"> $text"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimInput'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$dialog'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$default'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Magic  	'@_'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'defined'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$default'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimCmd'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"let input=input("'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"'"'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$dialog'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"'"'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'")"'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'else'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimCmd'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"let input=input("'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"'"'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$dialog'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"','"'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$default'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"'"'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'")"'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$inp'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimVar'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"input"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$inp'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimChooseFromPrompt'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$dialog'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$list'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$sep'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'@args'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Magic  	'@_'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$list'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'""'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimMsg_PE'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"Input list is not SCALAR "'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Break
            PPI::Token::Word  	'return'
            PPI::Token::Whitespace  	' '
            PPI::Token::Number  	'0'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$inp'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimInput'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$dialog'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'@opts'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'split'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"$sep"'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$list'
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$empty'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Compound
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'@args'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$empty'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'shift'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'@args'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'else'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$empty'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$list'
            PPI::Token::Operator  	'->'
            PPI::Structure::Subscript  	[ ... ]
              PPI::Statement::Expression
                PPI::Token::Number  	'0'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$result'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$inp'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$result'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$empty'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'elsif'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$inp'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'=~'
            PPI::Token::Whitespace  	' '
            PPI::Token::Regexp::Match  	'/^\s*(?<num>\d+)\s*$/'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$result'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$opts'
            PPI::Structure::Subscript  	[ ... ]
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Magic  	'$+'
                PPI::Structure::Subscript  	{ ... }
                  PPI::Statement::Expression
                    PPI::Token::Word  	'num'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'-'
                PPI::Token::Whitespace  	' '
                PPI::Token::Number  	'1'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'else'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$result'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$inp'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$result'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimCreatePrompt'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$list'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$cols'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$listsep'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Magic  	'@_'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$numcommon'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Include
        PPI::Token::Word  	'use'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'integer'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$numcommon'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'scalar'
        PPI::Token::Whitespace  	' '
        PPI::Token::Cast  	'@'
        PPI::Token::Symbol  	'$list'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$promptstr'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Double  	'""'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'@tableheader'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'split'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'" "'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"Number Option"'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'x'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$cols'
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$table'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'Text::TabularDisplay'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'new'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'@tableheader'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'@row'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$i'
        PPI::Token::Whitespace  	'     '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Number  	'0'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$nrows'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$numcommon'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'/'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$cols'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'while'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$i'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'<'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$nrows'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'@row'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Structure::List  	( ... )
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Variable
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$j'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$i'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n        '
          PPI::Statement::Compound
            PPI::Token::Word  	'for'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ncol'
            PPI::Token::Whitespace  	' '
            PPI::Structure::List  	( ... )
              PPI::Statement
                PPI::Token::Whitespace  	' '
                PPI::Structure::List  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Expression
                    PPI::Token::Number  	'1'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'..'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'$cols'
                  PPI::Token::Whitespace  	' '
              PPI::Token::Whitespace  	' '
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Symbol  	'$j'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$i'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'+'
                PPI::Token::Whitespace  	' '
                PPI::Structure::List  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$ncol'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'-'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Number  	'1'
                  PPI::Token::Whitespace  	' '
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'*'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$nrows'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\n            '
              PPI::Statement::Variable
                PPI::Token::Word  	'my'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$modj'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$list'
                PPI::Token::Operator  	'->'
                PPI::Structure::Subscript  	[ ... ]
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$j'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Word  	'push'
                PPI::Structure::List  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'@row'
                    PPI::Token::Operator  	','
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'$j'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'+'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Number  	'1'
                  PPI::Token::Whitespace  	' '
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Word  	'push'
                PPI::Structure::List  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'@row'
                    PPI::Token::Operator  	','
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'$modj'
                  PPI::Token::Whitespace  	' '
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\n        '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$table'
            PPI::Token::Operator  	'->'
            PPI::Token::Word  	'add'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'@row'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$i'
            PPI::Token::Operator  	'++'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$promptstr'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$table'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'render'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$promptstr'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimGetFromChooseDialog'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$iopts'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$iopts'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"HASH"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimMsg_PE'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"input parameter opts should be HASH"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Break
            PPI::Token::Word  	'return'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'undef'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Structure::Constructor  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Expression
            PPI::Token::Word  	'numcols'
            PPI::Token::Whitespace  	'  '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Number  	'1'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Word  	'list'
            PPI::Token::Whitespace  	'     '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Constructor  	[ ... ]
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Word  	'startopt'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''''
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Word  	'header'
            PPI::Token::Whitespace  	'   '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''Option Choose Dialog''
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Word  	'bottom'
            PPI::Token::Whitespace  	'   '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''Choose an option: ''
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Word  	'selected'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''Selected: ''
            PPI::Token::Operator  	','
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$dialog'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$liststr'
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opt'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'_hash_add'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$opts'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$iopts'
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'$liststr'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'_join'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"\n"'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$opts'
            PPI::Token::Operator  	'->'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Word  	'list'
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$dialog'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'.='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Word  	'header'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'.'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Double  	'"\n"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'$dialog'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'.='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimCreatePrompt'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$opts'
            PPI::Token::Operator  	'->'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Word  	'list'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$opts'
            PPI::Token::Operator  	'->'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Word  	'numcols'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'.'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Double  	'"\n"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'$dialog'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'.='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Word  	'bottom'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'.'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Double  	'"\n"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$opt'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimChooseFromPrompt'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$dialog'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$liststr'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"\n"'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$opts'
            PPI::Token::Operator  	'->'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Word  	'startopt'
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'VimMsgNL'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'VimMsg'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$opts'
            PPI::Token::Operator  	'->'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Word  	'selected'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$opt'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Structure::Constructor  	{ ... }
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Word  	'hl'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'=>'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Single  	''Title''
              PPI::Token::Whitespace  	' '
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opt'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPerlGetModuleNameFromDialog'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Structure::Constructor  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Expression
            PPI::Token::Word  	'header'
            PPI::Token::Whitespace  	'  '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"Choose the module name"'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Word  	'bottom'
            PPI::Token::Whitespace  	'  '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"Select the number of the module: "'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Word  	'list'
            PPI::Token::Whitespace  	'    '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Constructor  	[ ... ]
              PPI::Statement
                PPI::Token::Symbol  	'@LOCALMODULES'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Word  	'numcols'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Number  	'2'
            PPI::Token::Operator  	','
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$module'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimGetFromChooseDialog'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$opts'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$module'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPerlGetModuleName'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$module'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'shift'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'//'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Constructor  	{ ... }
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimMsg'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Word  	'Dumper'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$opts'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Label  	'LOOP:'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'while'
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Number  	'1'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Compound
            PPI::Token::Word  	'foreach'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$k'
            PPI::Structure::List  	( ... )
              PPI::Statement
                PPI::Token::Word  	'keys'
                PPI::Token::Whitespace  	' '
                PPI::Token::Cast  	'%'
                PPI::Token::Symbol  	'$opts'
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'          '
              PPI::Statement::Compound
                PPI::Token::Word  	'for'
                PPI::Structure::List  	( ... )
                  PPI::Statement
                    PPI::Token::Symbol  	'$k'
                PPI::Structure::Block  	{ ... }
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'            '
                  PPI::Statement
                    PPI::Token::Regexp::Match  	'/^selectdialog$/'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'&&'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Word  	'do'
                    PPI::Token::Whitespace  	' '
                    PPI::Structure::Block  	{ ... }
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'\t            '
                      PPI::Statement
                        PPI::Token::Symbol  	'$module'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'='
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Word  	'VimPerlGetModuleNameFromDialog'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'              '
                      PPI::Statement::Break
                        PPI::Token::Word  	'last'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Word  	'LOOP'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'            '
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'          '
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Compound
            PPI::Token::Word  	'if'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Condition  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$NumArgs'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'>'
                PPI::Token::Whitespace  	' '
                PPI::Token::Number  	'1'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Symbol  	'$module'
                PPI::Token::Operator  	'='
                PPI::Token::Symbol  	'$Args'
                PPI::Structure::Subscript  	[ ... ]
                  PPI::Statement::Expression
                    PPI::Token::Number  	'1'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement::Break
                PPI::Token::Word  	'last'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Variable
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$path'
            PPI::Token::Operator  	'='
            PPI::Token::Word  	'VimCurBuf_Name'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\t    '
          PPI::Statement
            PPI::Token::Symbol  	'$module'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''''
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\t\n\t    '
          PPI::Statement::Compound
            PPI::Token::Word  	'if'
            PPI::Structure::Condition  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$path'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t        '
              PPI::Statement::Compound
                PPI::Token::Word  	'if'
                PPI::Token::Whitespace  	' '
                PPI::Structure::Condition  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$path'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'=~'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Regexp::Match  	'/\.pm$/'
                PPI::Structure::Block  	{ ... }
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'\t            '
                  PPI::Statement
                    PPI::Token::Symbol  	'$module'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'='
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Word  	'VimPerlModuleNameFromPath'
                    PPI::Structure::List  	( ... )
                      PPI::Statement::Expression
                        PPI::Token::Symbol  	'$path'
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'\t        '
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
            PPI::Token::Word  	'else'
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t        '
              PPI::Statement
                PPI::Token::Word  	'VimMsgE'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Quote::Single  	''Failed to get $CurBuf->{name} from Vim::Perl''
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t\n\t        '
              PPI::Statement
                PPI::Token::Symbol  	'$module'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'VimPerlGetModuleNameFromDialog'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t    '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\t\n\t    '
          PPI::Statement::Compound
            PPI::Token::Word  	'unless'
            PPI::Structure::Condition  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$module'
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t        '
              PPI::Statement
                PPI::Token::Word  	'VimMsg'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Quote::Double  	'"Module name is zero"'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t    '
            PPI::Token::Word  	'else'
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t        '
              PPI::Statement
                PPI::Token::Word  	'VimMsg'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Quote::Double  	'"Module name is set as: $module"'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t        '
              PPI::Statement
                PPI::Token::Symbol  	'$ModuleName'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$module'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t    '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n        '
          PPI::Statement::Break
            PPI::Token::Word  	'last'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$module'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPerlPathFromModuleName'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$module'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'//'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$ModuleName'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'//'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$module'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Include
        PPI::Token::Word  	'require'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'OP::PERL::PMINST'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$pmi'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'OP::PERL::PMINST'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'new'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Include
        PPI::Token::Word  	'require'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'OP::Perl::Installer'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    \n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$i'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'OP::Perl::Installer'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'new'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'$i'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'main'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Structure::Constructor  	{ ... }
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$pattern'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''.''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Structure::Constructor  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Expression
            PPI::Token::Word  	'PATTERN'
            PPI::Token::Whitespace  	'    '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"^"'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$module'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''$''
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Word  	'mode'
            PPI::Token::Whitespace  	'       '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"fullpath"'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Word  	'searchdirs'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$i'
            PPI::Token::Operator  	'->'
            PPI::Token::Word  	'module_libdir'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$module'
            PPI::Token::Operator  	','
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    \n    '
      PPI::Statement
        PPI::Token::Symbol  	'$pmi'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'main'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$opts'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'@localpaths'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$pmi'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'MPATHS'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'@localpaths'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPerlModuleNameFromPath'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$path'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Operator  	'-e'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$path'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimMsgE'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Single  	''File :''
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$path'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Single  	'' does not exist''
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Break
            PPI::Token::Word  	'return'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''''
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$module'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Include
        PPI::Token::Word  	'require'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'OP::PackName'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimMsgDebug'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''Going to create OP::PackName instance ''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$p'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'OP::PackName'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'new'
        PPI::Structure::List  	( ... )
          PPI::Statement
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Structure::Constructor  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement::Expression
                PPI::Token::Word  	'skip_get_opt'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'=>'
                PPI::Token::Whitespace  	' '
                PPI::Token::Number  	'1'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	'\n'
                PPI::Token::Whitespace  	'            '
                PPI::Token::Word  	'ifile'
                PPI::Token::Whitespace  	'        '
                PPI::Token::Operator  	'=>'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"$path"'
                PPI::Token::Operator  	','
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'$p'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'opts'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$p'
            PPI::Token::Operator  	'->'
            PPI::Token::Word  	'optsnew'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'$p'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'ifile'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$p'
            PPI::Token::Operator  	'->'
            PPI::Token::Word  	'opts'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"ifile"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimMsgDebug'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'Data::Dumper'
            PPI::Token::Operator  	'->'
            PPI::Token::Word  	'Dump'
            PPI::Structure::List  	( ... )
              PPI::Statement
                PPI::Token::Whitespace  	' '
                PPI::Structure::Constructor  	[ ... ]
                  PPI::Statement
                    PPI::Token::Symbol  	'$p'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Structure::Constructor  	[ ... ]
                  PPI::Statement
                    PPI::Token::QuoteLike::Words  	'qw($p)'
              PPI::Token::Whitespace  	' '
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$p'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'notpod'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Number  	'1'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'$p'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'getpackstr'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimMsgDebug'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''After OP::PackName::run ''
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'Data::Dumper'
            PPI::Token::Operator  	'->'
            PPI::Token::Word  	'Dump'
            PPI::Structure::List  	( ... )
              PPI::Statement
                PPI::Token::Whitespace  	' '
                PPI::Structure::Constructor  	[ ... ]
                  PPI::Statement
                    PPI::Token::Symbol  	'$p'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Structure::Constructor  	[ ... ]
                  PPI::Statement
                    PPI::Token::QuoteLike::Words  	'qw($p)'
              PPI::Token::Whitespace  	' '
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$packstr'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$p'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'packstr'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimMsg'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$packstr'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$packstr'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimLet'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"g:PMOD_ModuleName"'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$packstr'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$ModuleName'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$packstr'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$module'
            PPI::Token::Whitespace  	'     '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$packstr'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n        '
          PPI::Statement
            PPI::Token::Word  	'VimMsgDebug'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Single  	''$ModuleName is set to ''
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$ModuleName'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'else'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimMsgE'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Single  	''Failed to get $packstr from OP::PackName''
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$module'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Vim_MsgColor'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$color'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$MsgColor'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$color'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'VimLet'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"g:MsgColor"'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"$color"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Vim_Files'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$id'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$file'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimVar'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"g:files['$id']"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$file'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Vim_Files_DAT'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$id'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$file'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimVar'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"g:datfiles['$id']"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$file'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimResetVars'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$vars'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'//'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$vars'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'foreach'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$var'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Statement
            PPI::Token::Cast  	'@'
            PPI::Token::Symbol  	'$vars'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Variable
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$evs'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''Vim_''
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$var'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"('')"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'eval'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"$evs"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Compound
            PPI::Token::Word  	'if'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Condition  	( ... )
              PPI::Statement::Expression
                PPI::Token::Magic  	'$@'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Word  	'VimMsg_PE'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Magic  	'$@'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Vim_MsgPrefix'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$prefix'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'//'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$prefix'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$MsgPrefix'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$prefix'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'VimLet'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"g:MsgPrefix"'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"$prefix"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'Vim_MsgDebug'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$val'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'defined'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$val'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$MsgDebug'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$val'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimLet'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"g:MsgDebug"'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$val'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$MsgPrefix'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimMsgNL'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'VimMsg'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'" "'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Structure::Constructor  	{ ... }
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Word  	'prefix'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'=>'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Single  	''none''
              PPI::Token::Whitespace  	' '
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimMsg'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$text'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'//'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$text'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'@o'
        PPI::Token::Whitespace  	'   '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Magic  	'@_'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$ref'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'@o'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$opts'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$prefix'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$keys'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Structure::Constructor  	[ ... ]
          PPI::Statement
            PPI::Token::QuoteLike::Words  	'qw(warn hl prefix color )'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Compound
        PPI::Token::Word  	'foreach'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$k'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Statement
            PPI::Token::Cast  	'@'
            PPI::Token::Symbol  	'$keys'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	' '
          PPI::Statement
            PPI::Token::Symbol  	'$opts'
            PPI::Token::Operator  	'->'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$k'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''''
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	' '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Word  	'prefix'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''subname''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Compound
            PPI::Token::Word  	'if'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Condition  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'@o'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement::Variable
                PPI::Token::Word  	'my'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'%oo'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Structure::List  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$ref'
                    PPI::Token::Operator  	','
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'@o'
                  PPI::Token::Whitespace  	' '
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Symbol  	'$opts'
                PPI::Token::Operator  	'->'
                PPI::Structure::Subscript  	{ ... }
                  PPI::Statement::Expression
                    PPI::Token::Magic  	'$_'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$oo'
                PPI::Structure::Subscript  	{ ... }
                  PPI::Statement::Expression
                    PPI::Token::Magic  	'$_'
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'for'
                PPI::Token::Whitespace  	' '
                PPI::Structure::List  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement
                    PPI::Token::Word  	'keys'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'%oo'
                  PPI::Token::Whitespace  	' '
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Word  	'else'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Symbol  	'$opts'
                PPI::Token::Operator  	'->'
                PPI::Structure::Subscript  	{ ... }
                  PPI::Statement::Expression
                    PPI::Token::Word  	'hl'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$ref'
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'unless'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'@o'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'elsif'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"HASH"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$opts'
            PPI::Token::Operator  	'->'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Magic  	'$_'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
            PPI::Token::Operator  	'->'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Magic  	'$_'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'for'
            PPI::Token::Whitespace  	' '
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement
                PPI::Token::Word  	'keys'
                PPI::Token::Whitespace  	' '
                PPI::Token::Cast  	'%'
                PPI::Token::Symbol  	'$ref'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'for'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement
            PPI::Token::Symbol  	'$opts'
            PPI::Token::Operator  	'->'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Word  	'prefix'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Regexp::Match  	'/^none$/'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'&&'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'do'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	' '
              PPI::Statement
                PPI::Token::Symbol  	'$prefix'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Single  	''''
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	' '
              PPI::Statement::Break
                PPI::Token::Word  	'next'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Regexp::Match  	'/^subname$/'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'&&'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'do'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	' '
              PPI::Statement
                PPI::Token::Symbol  	'$prefix'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"$SubName()>> "'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	' '
              PPI::Statement::Break
                PPI::Token::Word  	'next'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$prefix'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$MsgPrefix'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$MsgPrefix'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'$MsgPrefix'
        PPI::Token::Operator  	'='
        PPI::Token::Symbol  	'$prefix'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Word  	'hl'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''WarningMsg''
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Word  	'warn'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Word  	'hl'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''ErrorMsg''
        PPI::Token::Whitespace  	'   '
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Word  	'error'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$colors'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Structure::Constructor  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Expression
            PPI::Token::Word  	'yellow'
            PPI::Token::Whitespace  	'          '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''CursorLineNr''
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Quote::Single  	''bold yellow''
            PPI::Token::Whitespace  	'   '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''CursorLineNr''
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Quote::Single  	''red''
            PPI::Token::Whitespace  	'           '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''WarningMsg''
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Quote::Single  	''bold red''
            PPI::Token::Whitespace  	'      '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''WarningMsg''
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Quote::Single  	''green''
            PPI::Token::Whitespace  	'         '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''DiffChange''
            PPI::Token::Operator  	','
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$color'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$MsgColor'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'//'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'$color'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Word  	'color'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Word  	'color'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Word  	'hl'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$colors'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$color'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$color'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$text'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$prefix'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'.'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$text'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$opts'
            PPI::Token::Operator  	'->'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Word  	'hl'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VIM::Msg'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"$text"'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$opts'
                PPI::Token::Operator  	'->'
                PPI::Structure::Subscript  	{ ... }
                  PPI::Statement::Expression
                    PPI::Token::Word  	'hl'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'else'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VIM::Msg'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"$text"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimMsg_PE'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$text'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$subname'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'caller'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Number  	'1'
          PPI::Token::Whitespace  	' '
        PPI::Structure::Constructor  	[ ... ]
          PPI::Statement
            PPI::Token::Number  	'3'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimMsg'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"Error in $subname : "'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$text'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Structure::Constructor  	{ ... }
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Word  	'error'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'=>'
                PPI::Token::Whitespace  	' '
                PPI::Token::Number  	'1'
              PPI::Token::Whitespace  	' '
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimMsgE'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$text'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'VIM::Msg'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'" $text"'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"ErrorMsg"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimLet'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$var'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$ref'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$valstr'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$lhs'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Double  	'"let $var"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$valstr'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.='
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"'$ref'"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'elsif'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"ARRAY"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$valstr'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.='
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"[ '"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$valstr'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.='
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'join'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"' , '"'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Token::Cast  	'@'
                PPI::Token::Symbol  	'$ref'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$valstr'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.='
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"' ]"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'elsif'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"HASH"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Compound
            PPI::Token::Word  	'unless'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Condition  	( ... )
              PPI::Statement::Expression
                PPI::Token::Cast  	'%'
                PPI::Token::Symbol  	'$ref'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Symbol  	'$valstr'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Single  	''{}''
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Word  	'else'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Symbol  	'$valstr'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.='
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"{ "'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement::Compound
                PPI::Token::Word  	'while'
                PPI::Token::Whitespace  	' '
                PPI::Structure::Condition  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Variable
                    PPI::Token::Word  	'my'
                    PPI::Token::Whitespace  	' '
                    PPI::Structure::List  	( ... )
                      PPI::Token::Whitespace  	' '
                      PPI::Statement::Expression
                        PPI::Token::Symbol  	'$k'
                        PPI::Token::Operator  	','
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Symbol  	'$v'
                      PPI::Token::Whitespace  	' '
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'='
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Word  	'each'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Cast  	'%'
                    PPI::Structure::Block  	{ ... }
                      PPI::Statement
                        PPI::Token::Symbol  	'$ref'
                  PPI::Token::Whitespace  	' '
                PPI::Token::Whitespace  	' '
                PPI::Structure::Block  	{ ... }
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'                '
                  PPI::Statement
                    PPI::Token::Symbol  	'$valstr'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'.='
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Quote::Double  	'" '$k' : '$v', "'
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'            '
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Symbol  	'$valstr'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.='
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'" }"'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$valstr'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimCmd'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Single  	''if exists("''
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$var'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Single  	''") | unlet ''
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$var'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Single  	'' | endif ''
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimCmd'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$lhs'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Single  	''=''
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$valstr'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimLetEval'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$var'
            PPI::Token::Operator  	','
            PPI::Token::Symbol  	'$expr'
        PPI::Token::Operator  	'='
        PPI::Token::Magic  	'@_'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$val'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'VimEval'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$expr'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'VimLet'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$var'
            PPI::Token::Operator  	','
            PPI::Token::Symbol  	'$val'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimSet'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opt'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$val'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimCmd'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"set $opt=$val"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimMsgDebug'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$msg'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$MsgDebug'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"1"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimMsg'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"(D) $msg"'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Structure::Constructor  	{ ... }
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Expression
                    PPI::Token::Word  	'hl'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'=>'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Quote::Single  	''Folded''
                  PPI::Token::Whitespace  	' '
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimStrToOpts'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$str'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$sep'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$ropts'
        PPI::Token::Operator  	'='
        PPI::Structure::Constructor  	{ ... }
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'@opts'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'split'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"$sep"'
            PPI::Token::Operator  	','
            PPI::Token::Symbol  	'$str'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimMsg'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''Inside VimStrToOpts: sep=''
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$sep'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''; @opts=''
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'Dumper'
            PPI::Token::Operator  	','
            PPI::Token::Cast  	'\'
            PPI::Token::Symbol  	'@opts'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'foreach'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$o'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Statement
            PPI::Token::Symbol  	'@opts'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$ropts'
            PPI::Token::Operator  	'->'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$o'
            PPI::Token::Operator  	'='
            PPI::Token::Number  	'1'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$ropts'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPerlInstallModule'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'@imodules'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$iopts'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'shift'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'//'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Constructor  	{ ... }
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$iopts'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$opts'
            PPI::Token::Operator  	'='
            PPI::Token::Word  	'VimStrToOpts'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$iopts'
                PPI::Token::Operator  	','
                PPI::Token::Quote::Double  	'":"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'elsif'
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$iopts'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"HASH"'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$opts'
            PPI::Token::Operator  	'='
            PPI::Token::Symbol  	'$iopts'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Statement
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$NumArgs'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'>'
                PPI::Token::Whitespace  	' '
                PPI::Token::Number  	'1'
              PPI::Token::Whitespace  	' '
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'&&'
            PPI::Token::Whitespace  	' '
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$Args'
                PPI::Structure::Subscript  	[ ... ]
                  PPI::Statement::Expression
                    PPI::Token::Number  	'1'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'eq'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"_all_"'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'push'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'@imodules'
                PPI::Token::Operator  	','
                PPI::Token::Symbol  	'@LOCALMODULES'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'else'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'push'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'@imodules'
                PPI::Token::Operator  	','
                PPI::Token::Word  	'VimPerlGetModuleName'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$opts'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Include
        PPI::Token::Word  	'require'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'OP::Perl::Installer'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$i'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'OP::Perl::Installer'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'new'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'$i'
        PPI::Token::Operator  	'->'
        PPI::Token::Word  	'main'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'foreach'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opt'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Statement
            PPI::Token::Word  	'keys'
            PPI::Token::Whitespace  	' '
            PPI::Token::Cast  	'%'
            PPI::Token::Symbol  	'$opts'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'      '
          PPI::Statement::Compound
            PPI::Token::Word  	'for'
            PPI::Structure::List  	( ... )
              PPI::Statement
                PPI::Token::Symbol  	'$opt'
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
              PPI::Statement
                PPI::Token::Regexp::Match  	'/^rbi_(force|discard_loaddat)$/'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'&&'
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'do'
                PPI::Token::Whitespace  	' '
                PPI::Structure::Block  	{ ... }
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'          '
                  PPI::Statement::Variable
                    PPI::Token::Word  	'my'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'$evs'
                    PPI::Token::Operator  	'='
                    PPI::Token::Quote::Single  	''$i->''
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'.'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'$opt'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'.'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Quote::Single  	''(1);''
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'          '
                  PPI::Statement
                    PPI::Token::Word  	'eval'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Quote::Double  	'"$evs"'
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'          '
                  PPI::Statement
                    PPI::Token::Word  	'die'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Magic  	'$@'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Word  	'if'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Magic  	'$@'
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'          '
                  PPI::Statement::Break
                    PPI::Token::Word  	'next'
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'        '
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'      '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'foreach'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$module'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Statement
            PPI::Token::Symbol  	'@imodules'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n\t    '
          PPI::Statement
            PPI::Token::Word  	'VimMsg'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"Running install for module $module"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n\t    '
          PPI::Statement::Variable
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$ok'
                PPI::Token::Operator  	','
                PPI::Token::Symbol  	'$success'
                PPI::Token::Operator  	','
                PPI::Token::Symbol  	'$fail'
                PPI::Token::Operator  	','
                PPI::Token::Symbol  	'$failmods'
                PPI::Token::Operator  	','
                PPI::Token::Symbol  	'$errorlines'
            PPI::Token::Operator  	'='
            PPI::Token::Symbol  	'$i'
            PPI::Token::Operator  	'->'
            PPI::Token::Word  	'run_build_install'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$module'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\t    '
          PPI::Statement::Compound
            PPI::Token::Word  	'if'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Condition  	( ... )
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$ok'
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t        '
              PPI::Statement
                PPI::Token::Word  	'VimMsg'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Quote::Double  	'"SUCCESS"'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t    '
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'else'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t        '
              PPI::Statement
                PPI::Token::Word  	'VimMsg'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Quote::Double  	'"FAIL"'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t        '
              PPI::Statement::Variable
                PPI::Token::Word  	'my'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$efmperl'
                PPI::Token::Operator  	'='
                PPI::Token::Word  	'catfile'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$VDIRS'
                    PPI::Structure::Subscript  	{ ... }
                      PPI::Statement::Expression
                        PPI::Token::Word  	'VIMRUNTIME'
                    PPI::Token::Operator  	','
                    PPI::Token::QuoteLike::Words  	'qw(tools efm_perl.pl)'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t        '
              PPI::Statement::Variable
                PPI::Token::Word  	'my'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$efmfilter'
                PPI::Token::Operator  	'='
                PPI::Token::Word  	'catfile'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$VDIRS'
                    PPI::Structure::Subscript  	{ ... }
                      PPI::Statement::Expression
                        PPI::Token::Word  	'VIMRUNTIME'
                    PPI::Token::Operator  	','
                    PPI::Token::QuoteLike::Words  	'qw(tools efm_filter.pl)'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement::Variable
                PPI::Token::Word  	'my'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$tmpfile'
                PPI::Token::Operator  	'='
                PPI::Token::Word  	'VimEval'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Quote::Single  	''tempname()''
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement::Variable
                PPI::Token::Word  	'my'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$elines'
                PPI::Token::Operator  	'='
                PPI::Token::Symbol  	'$errorlines'
                PPI::Token::Operator  	'->'
                PPI::Structure::Subscript  	{ ... }
                  PPI::Statement::Expression
                    PPI::Token::Word  	'module'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'//'
                PPI::Token::Whitespace  	' '
                PPI::Structure::Constructor  	[ ... ]
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Word  	'write_file'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$tmpfile'
                    PPI::Token::Operator  	','
                    PPI::Token::Word  	'join'
                    PPI::Structure::List  	( ... )
                      PPI::Statement::Expression
                        PPI::Token::Quote::Double  	'"\n"'
                        PPI::Token::Operator  	','
                        PPI::Token::Cast  	'@'
                        PPI::Token::Symbol  	'$elines'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'.'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Quote::Double  	'"\n"'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\n            '
              PPI::Statement::Variable
                PPI::Token::Word  	'my'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$qlist'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement::Variable
                PPI::Token::Word  	'my'
                PPI::Token::Whitespace  	' '
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$linenumber'
                    PPI::Token::Operator  	','
                    PPI::Token::Symbol  	'$pattern'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Symbol  	'$qlist'
                PPI::Token::Operator  	'='
                PPI::Structure::Constructor  	[ ... ]
                  PPI::Statement
                    PPI::Token::Whitespace  	' '
                    PPI::Structure::Constructor  	{ ... }
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                '
                      PPI::Statement::Expression
                        PPI::Token::Word  	'filename'
                        PPI::Token::Whitespace  	'  '
                        PPI::Token::Operator  	'=>'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Word  	'VimPerlPathFromModuleName'
                        PPI::Structure::List  	( ... )
                          PPI::Statement::Expression
                            PPI::Token::Symbol  	'$module'
                        PPI::Token::Operator  	','
                        PPI::Token::Whitespace  	'\n'
                        PPI::Token::Whitespace  	'                '
                        PPI::Token::Word  	'lnum'
                        PPI::Token::Whitespace  	'  '
                        PPI::Token::Operator  	'=>'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Quote::Single  	''20''
                        PPI::Token::Operator  	','
                        PPI::Token::Whitespace  	'\n'
                        PPI::Token::Whitespace  	'                '
                        PPI::Token::Word  	'text'
                        PPI::Token::Whitespace  	'  '
                        PPI::Token::Operator  	'=>'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Quote::Single  	''''
                        PPI::Token::Operator  	','
                        PPI::Token::Whitespace  	'\n'
                        PPI::Token::Whitespace  	'                '
                        PPI::Token::Word  	'type'
                        PPI::Token::Whitespace  	'  '
                        PPI::Token::Operator  	'=>'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Quote::Single  	''''
                        PPI::Token::Operator  	','
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'            '
                  PPI::Token::Whitespace  	' '
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Word  	'print'
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'Dumper'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$qlist'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t\t\t'
              PPI::Statement
                PPI::Token::Word  	'VimQuickFixList'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$qlist'
                    PPI::Token::Operator  	','
                    PPI::Token::Quote::Single  	''add''
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t    '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimQuickFixList'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$qlist'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$action'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'@arr'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$qlist'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"ARRAY"'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'      '
          PPI::Statement
            PPI::Token::Symbol  	'@arr'
            PPI::Token::Operator  	'='
            PPI::Token::Cast  	'@'
            PPI::Token::Symbol  	'$qlist'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'elsif'
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$qlist'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"HASH"'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'      '
          PPI::Statement
            PPI::Token::Symbol  	'@arr'
            PPI::Token::Operator  	'='
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$qlist'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$i'
        PPI::Token::Operator  	'='
        PPI::Token::Number  	'0'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Compound
        PPI::Token::Word  	'foreach'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$a'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Statement
            PPI::Token::Symbol  	'@arr'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimLet'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Single  	''qlist''
                PPI::Token::Operator  	','
                PPI::Token::Symbol  	'$a'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n\t    '
          PPI::Statement::Compound
            PPI::Token::Word  	'for'
            PPI::Structure::List  	( ... )
              PPI::Statement
                PPI::Token::Symbol  	'$action'
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t      '
              PPI::Statement
                PPI::Token::Regexp::Match  	'/^add$/'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'&&'
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'do'
                PPI::Token::Whitespace  	' '
                PPI::Structure::Block  	{ ... }
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'\t\t        '
                  PPI::Statement
                    PPI::Token::Word  	'VimCmd'
                    PPI::Structure::List  	( ... )
                      PPI::Statement::Expression
                        PPI::Token::Quote::Double  	'"call setqflist([ qlist ], 'a')"'
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'\t\t        '
                  PPI::Statement::Break
                    PPI::Token::Word  	'next'
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'\t      '
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t      '
              PPI::Statement
                PPI::Token::Regexp::Match  	'/^new$/'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'&&'
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'do'
                PPI::Token::Whitespace  	' '
                PPI::Structure::Block  	{ ... }
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'\t          '
                  PPI::Statement::Compound
                    PPI::Token::Word  	'unless'
                    PPI::Structure::Condition  	( ... )
                      PPI::Statement::Expression
                        PPI::Token::Symbol  	'$i'
                    PPI::Structure::Block  	{ ... }
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'\t\t          '
                      PPI::Statement
                        PPI::Token::Word  	'VimCmd'
                        PPI::Structure::List  	( ... )
                          PPI::Statement::Expression
                            PPI::Token::Quote::Double  	'"call setqflist([ qlist ])"'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'\t          '
                    PPI::Token::Word  	'else'
                    PPI::Structure::Block  	{ ... }
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'\t\t          '
                      PPI::Statement
                        PPI::Token::Word  	'VimCmd'
                        PPI::Structure::List  	( ... )
                          PPI::Statement::Expression
                            PPI::Token::Quote::Double  	'"call setqflist([ qlist ],'a')"'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'\t          '
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'\t          '
                  PPI::Statement::Break
                    PPI::Token::Word  	'next'
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'\t      '
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\t    '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'          '
          PPI::Statement
            PPI::Token::Word  	'VimMsg'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"Processed QLIST: "'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'VimEval'
                PPI::Structure::List  	( ... )
                  PPI::Statement::Expression
                    PPI::Token::Quote::Single  	''getqflist()''
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'      '
          PPI::Statement
            PPI::Token::Symbol  	'$i'
            PPI::Token::Operator  	'++'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPerlViewModule'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$module'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$NumArgs'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$module'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'VimPerlGetModuleNameFromDialog'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'else'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$module'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ArgString'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$path'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimPerlPathFromModuleName'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$module'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Operator  	'-e'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$path'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimCmd'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"tabnew $path"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimPieceFullFile'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$piece'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$path'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'catfile'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$VDIRS'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Word  	'MKVIMRC'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$piece'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''.vim''
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimGetLine'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$num'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimLet'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''num''
            PPI::Token::Operator  	','
            PPI::Token::Symbol  	'$num'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimEval'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''getline(num)''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimSetLine'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$num'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$text'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimLet'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''num''
            PPI::Token::Operator  	','
            PPI::Token::Symbol  	'$num'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'VimLet'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''text''
            PPI::Token::Operator  	','
            PPI::Token::Symbol  	'$text'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimCmd'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''call setline(num,text)''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimAppend'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$num'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$text'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimLet'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''text''
            PPI::Token::Operator  	','
            PPI::Token::Symbol  	'$text'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'VimLet'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''num''
            PPI::Token::Operator  	','
            PPI::Token::Symbol  	'$num'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimCmd'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''call append(num,text)''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimSetTags'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$ref'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimSet'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"tags"'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$ref'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n    '
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'elsif'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'eq'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"ARRAY"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Variable
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$first'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ref'
            PPI::Token::Operator  	'->'
            PPI::Structure::Subscript  	[ ... ]
              PPI::Statement::Expression
                PPI::Token::Number  	'0'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n        '
          PPI::Statement
            PPI::Token::Word  	'VimSet'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"tags"'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'join'
                PPI::Structure::List  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Expression
                    PPI::Token::Quote::Single  	'',''
                    PPI::Token::Operator  	','
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Cast  	'@'
                    PPI::Token::Symbol  	'$ref'
                  PPI::Token::Whitespace  	' '
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimLet'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"g:CTAGS_CurrentTagID"'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Single  	''_buf_''
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimLet'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"g:tagfile"'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	'            '
                PPI::Token::Symbol  	'$first'
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n    '
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimJoin'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$arr'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$sep'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimExists'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$arr'
        PPI::Token::Structure  	';'
      PPI::Statement
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'\n    '
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$EvalCode'
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$res'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VIM::Eval'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"join($arr,'"'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$sep'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"')"'
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$EvalCode'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$res'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimCurBuf_Name'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimEval'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"bufname('%')"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimCurBuf_Num'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimEval'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"bufnr('%')"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimCurBuf_Basename'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'//'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$name'
        PPI::Token::Operator  	'='
        PPI::Token::Word  	'VimCurBuf_Name'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n\t'
      PPI::Statement::Break
        PPI::Token::Word  	'return'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$name'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$name'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$name'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'basename'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$name'
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$opts'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Compound
            PPI::Token::Word  	'if'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Condition  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$opts'
                PPI::Token::Operator  	'->'
                PPI::Structure::Subscript  	{ ... }
                  PPI::Statement::Expression
                    PPI::Token::Word  	'remove_extension'
              PPI::Token::Whitespace  	' '
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Symbol  	'$name'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'=~'
                PPI::Token::Whitespace  	' '
                PPI::Token::Regexp::Substitute  	's/\.(\w+)$//g'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$name'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimBufFiles_Edit'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$editopt'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$opts'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Word  	'editopt'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'//'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'foreach'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$bfile'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Statement
            PPI::Token::Symbol  	'@BFILES'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Break
            PPI::Token::Word  	'next'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'unless'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$bfile'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'=~'
            PPI::Token::Whitespace  	' '
            PPI::Token::Regexp::Match  	'/\.vim$/'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n        '
          PPI::Statement
            PPI::Token::Word  	'VimMsg'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"Processing vim file: $bfile"'
            PPI::Token::Structure  	';'
          PPI::Statement
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'\n        '
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Variable
                PPI::Token::Word  	'my'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$piece'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'='
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$bfile'
              PPI::Token::Whitespace  	' '
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'=~'
            PPI::Token::Whitespace  	' '
            PPI::Token::Regexp::Substitute  	's/(\w+)\.vim/$1/g'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n        '
          PPI::Statement::Variable
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'@lines'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'read_file'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$bfile'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n        '
          PPI::Statement::Variable
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'%onfun'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Variable
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$fname'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Variable
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'@nlines'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n        '
          PPI::Statement::Compound
            PPI::Token::Word  	'foreach'
            PPI::Token::Whitespace  	' '
            PPI::Structure::List  	( ... )
              PPI::Statement
                PPI::Token::Symbol  	'@lines'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Word  	'chomp'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement::Compound
                PPI::Token::Word  	'if'
                PPI::Token::Whitespace  	' '
                PPI::Structure::Condition  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$editopt'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'=='
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Quote::Double  	'"Insert_SubName"'
                  PPI::Token::Whitespace  	' '
                PPI::Token::Whitespace  	' '
                PPI::Structure::Block  	{ ... }
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'\n                '
                  PPI::Statement
                    PPI::Token::Regexp::Match  	'/^\s*(?<fdec>fun|function)!\s+(?<fname>\w+)/'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'&&'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Word  	'do'
                    PPI::Token::Whitespace  	' '
                    PPI::Structure::Block  	{ ... }
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                    '
                      PPI::Statement
                        PPI::Token::Symbol  	'$fname'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'='
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Magic  	'$+'
                        PPI::Structure::Subscript  	{ ... }
                          PPI::Statement::Expression
                            PPI::Token::Word  	'fname'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                    '
                      PPI::Statement
                        PPI::Token::Symbol  	'$onfun'
                        PPI::Structure::Subscript  	{ ... }
                          PPI::Statement::Expression
                            PPI::Token::Symbol  	'$fname'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'='
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Number  	'1'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                    '
                      PPI::Statement
                        PPI::Token::Magic  	'$_'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'.='
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Quote::Double  	'"\n"'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'.'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Quote::Double  	'" let g:SubName='"'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'.'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Symbol  	'$fname'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'.'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Quote::Double  	'"'"'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                    '
                      PPI::Statement
                        PPI::Token::Word  	'push'
                        PPI::Structure::List  	( ... )
                          PPI::Token::Whitespace  	' '
                          PPI::Statement::Expression
                            PPI::Token::Symbol  	'@nlines'
                            PPI::Token::Operator  	','
                            PPI::Token::Whitespace  	' '
                            PPI::Token::Magic  	'$_'
                          PPI::Token::Whitespace  	' '
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'\n                    '
                      PPI::Statement::Break
                        PPI::Token::Word  	'next'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                '
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'\n                '
                  PPI::Statement
                    PPI::Token::Regexp::Match  	'/^\s*let\s*g:SubName=/'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'&&'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Word  	'do'
                    PPI::Token::Whitespace  	' '
                    PPI::Structure::Block  	{ ... }
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                    '
                      PPI::Statement
                        PPI::Token::Magic  	'$_'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'='
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Quote::Single  	''''
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                    '
                      PPI::Statement::Break
                        PPI::Token::Word  	'next'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                '
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'                '
                  PPI::Statement
                    PPI::Token::Regexp::Match  	'/^\s*endf(|un|unction)/'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'&&'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Word  	'do'
                    PPI::Token::Whitespace  	' '
                    PPI::Structure::Block  	{ ... }
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                    '
                      PPI::Statement
                        PPI::Token::Symbol  	'$onfun'
                        PPI::Structure::Subscript  	{ ... }
                          PPI::Statement::Expression
                            PPI::Token::Symbol  	'$fname'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'='
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Number  	'0'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Word  	'if'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Symbol  	'$fname'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'\n                '
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'            '
                PPI::Token::Whitespace  	'\n'
                PPI::Token::Whitespace  	'            '
                PPI::Token::Word  	'elsif'
                PPI::Token::Whitespace  	' '
                PPI::Structure::Condition  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'$editopt'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'=='
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Quote::Double  	'"EditSlurp"'
                  PPI::Token::Whitespace  	' '
                PPI::Token::Whitespace  	' '
                PPI::Structure::Block  	{ ... }
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'                '
                  PPI::Statement::Variable
                    PPI::Token::Word  	'my'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'$cmds'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Operator  	'='
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'$opts'
                    PPI::Token::Operator  	'->'
                    PPI::Structure::Subscript  	{ ... }
                      PPI::Statement::Expression
                        PPI::Token::Word  	'cmds'
                    PPI::Token::Structure  	';'
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'                '
                  PPI::Statement::Compound
                    PPI::Token::Word  	'foreach'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Word  	'my'
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Symbol  	'$cmd'
                    PPI::Token::Whitespace  	' '
                    PPI::Structure::List  	( ... )
                      PPI::Statement
                        PPI::Token::Cast  	'@'
                        PPI::Token::Symbol  	'$cmds'
                    PPI::Token::Whitespace  	' '
                    PPI::Structure::Block  	{ ... }
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                    '
                      PPI::Statement::Variable
                        PPI::Token::Word  	'my'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Symbol  	'$evs'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Operator  	'='
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Symbol  	'$cmd'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                    '
                      PPI::Statement
                        PPI::Token::Word  	'eval'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Quote::Double  	'"$evs"'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                    '
                      PPI::Statement
                        PPI::Token::Word  	'die'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Magic  	'$@'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Word  	'if'
                        PPI::Token::Whitespace  	' '
                        PPI::Token::Magic  	'$@'
                        PPI::Token::Structure  	';'
                      PPI::Token::Whitespace  	'\n'
                      PPI::Token::Whitespace  	'                '
                  PPI::Token::Whitespace  	'\n'
                  PPI::Token::Whitespace  	'            '
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'\n            '
              PPI::Statement
                PPI::Token::Word  	'push'
                PPI::Structure::List  	( ... )
                  PPI::Token::Whitespace  	' '
                  PPI::Statement::Expression
                    PPI::Token::Symbol  	'@nlines'
                    PPI::Token::Operator  	','
                    PPI::Token::Whitespace  	' '
                    PPI::Token::Magic  	'$_'
                  PPI::Token::Whitespace  	' '
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'open'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Word  	'F'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'">$bfile"'
              PPI::Token::Whitespace  	' '
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'||'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'die'
            PPI::Token::Whitespace  	' '
            PPI::Token::Magic  	'$!'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Compound
            PPI::Token::Word  	'foreach'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$nline'
            PPI::Token::Whitespace  	' '
            PPI::Structure::List  	( ... )
              PPI::Statement
                PPI::Token::Symbol  	'@nlines'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Word  	'print'
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'F'
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$nline'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'.'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"\n"'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'\n        '
          PPI::Statement::Compound
            PPI::Token::Word  	'if'
            PPI::Token::Whitespace  	' '
            PPI::Structure::Condition  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$editopt'
                PPI::Token::Whitespace  	' '
                PPI::Token::Operator  	'=='
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"Append_g_Loaded_Pieces"'
              PPI::Token::Whitespace  	' '
            PPI::Token::Whitespace  	' '
            PPI::Structure::Block  	{ ... }
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'            '
              PPI::Statement
                PPI::Token::Word  	'print'
                PPI::Token::Whitespace  	' '
                PPI::Token::Word  	'F'
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Double  	'"let g:LoadedPieces_$piece=1"'
                PPI::Token::Structure  	';'
              PPI::Token::Whitespace  	'\n'
              PPI::Token::Whitespace  	'        '
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'close'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Word  	'F'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'init'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'%opts'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Magic  	'@_'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$FullSubName'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimVar'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''g:SubName''
        PPI::Token::Structure  	';'
      PPI::Statement
        PPI::Token::Whitespace  	'\n'
        PPI::Token::Whitespace  	'\n    '
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$SubName'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$FullSubName'
          PPI::Token::Whitespace  	' '
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'=~'
        PPI::Token::Whitespace  	' '
        PPI::Token::Regexp::Substitute  	's/^\s*_VIMPERL_//g'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$MsgPrefix'
        PPI::Token::Operator  	'='
        PPI::Token::Quote::Double  	'"$SubName()>> "'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'@INITIDS'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::QuoteLike::Words  	'qw(\n      Args\n      VDIRS\n      CurBuf\n      PIECES\n      MODULES\n    )'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'@BUFLIST'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VIM::Buffers'
        PPI::Structure::List  	( ... )
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'@BFILES'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'foreach'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$buf'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Statement
            PPI::Token::Symbol  	'@BUFLIST'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Variable
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$name'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$buf'
            PPI::Token::Operator  	'->'
            PPI::Token::Word  	'Name'
            PPI::Structure::List  	( ... )
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$name'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'=~'
            PPI::Token::Whitespace  	' '
            PPI::Token::Regexp::Substitute  	's/^\s*//g'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$name'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'=~'
            PPI::Token::Whitespace  	' '
            PPI::Token::Regexp::Substitute  	's/\s*$//g'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'push'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Symbol  	'@BFILES'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Token::Symbol  	'$name'
              PPI::Token::Whitespace  	' '
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'if'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'-e'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$name'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'foreach'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$id'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Statement
            PPI::Token::Symbol  	'@INITIDS'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'eval'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	''init_''
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$id'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'_die'
            PPI::Token::Whitespace  	' '
            PPI::Token::Magic  	'$@'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'if'
            PPI::Token::Whitespace  	' '
            PPI::Token::Magic  	'$@'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'VimEditBufFiles'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$cmds'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'//'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$ArgString'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$cmds'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimMsgE'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"No commands were provided"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Break
            PPI::Token::Word  	'return'
            PPI::Token::Whitespace  	' '
            PPI::Token::Number  	'0'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$slurpsub'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'//'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''edit_file_lines''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'VimMsg'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"Will apply to all buffers: $cmds"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'foreach'
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$bfile'
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Statement
            PPI::Token::Symbol  	'@BFILES'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'VimMsg'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Double  	'"Processing buffer: $bfile"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Variable
            PPI::Token::Word  	'my'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$evs'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$slurpsub'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	'' { ''
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$cmds'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'.'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Single  	'' } $bfile''
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'eval'
            PPI::Token::Whitespace  	' '
            PPI::Token::Quote::Double  	'"$evs"'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Word  	'die'
            PPI::Token::Whitespace  	' '
            PPI::Token::Magic  	'$@'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'if'
            PPI::Token::Whitespace  	' '
            PPI::Token::Magic  	'$@'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'_die'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement::Variable
        PPI::Token::Word  	'my'
        PPI::Token::Whitespace  	' '
        PPI::Token::Symbol  	'$text'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'shift'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Word  	'die'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Double  	'"VIMPERL_$SubName : $text"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'init_Args'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$NumArgs'
        PPI::Token::Whitespace  	'   '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Number  	'0'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'$ArgString'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'@Args'
        PPI::Token::Whitespace  	'      '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$NumArgs'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimLen'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''a:000''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'if'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Symbol  	'$NumArgs'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'@Args'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'VimVar'
            PPI::Structure::List  	( ... )
              PPI::Statement::Expression
                PPI::Token::Quote::Single  	''a:000''
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$ArgString'
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'='
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'VimJoin'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Quote::Single  	''a:000''
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Single  	'' ''
              PPI::Token::Whitespace  	' '
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'init_MODULES'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'@LOCALMODULES'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimVar'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''g:PMOD_available_mods''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'init_CurBuf'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement
        PPI::Token::Symbol  	'$CurBuf'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Word  	'name'
        PPI::Token::Whitespace  	'   '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimEval'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"bufname('%')"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'$CurBuf'
        PPI::Token::Operator  	'->'
        PPI::Structure::Subscript  	{ ... }
          PPI::Statement::Expression
            PPI::Token::Word  	'number'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'VimEval'
        PPI::Structure::List  	( ... )
          PPI::Statement::Expression
            PPI::Token::Quote::Double  	'"bufnr('%')"'
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'init_PIECES'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'@PIECES'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Token::Word  	'readarr'
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	' '
          PPI::Statement::Expression
            PPI::Token::Word  	'catfile'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$VDIRS'
                PPI::Structure::Subscript  	{ ... }
                  PPI::Statement::Expression
                    PPI::Token::Word  	'MKVIMRC'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Token::QuoteLike::Words  	'qw(files.i.dat)'
              PPI::Token::Whitespace  	' '
          PPI::Token::Whitespace  	' '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Sub
    PPI::Token::Word  	'sub'
    PPI::Token::Whitespace  	' '
    PPI::Token::Word  	'init_VDIRS'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Symbol  	'%VDIRS'
        PPI::Token::Whitespace  	' '
        PPI::Token::Operator  	'='
        PPI::Token::Whitespace  	' '
        PPI::Structure::List  	( ... )
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Expression
            PPI::Token::Quote::Single  	''TAGS''
            PPI::Token::Whitespace  	'    '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'catfile'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$ENV'
                PPI::Structure::Subscript  	{ ... }
                  PPI::Statement::Expression
                    PPI::Token::Word  	'HOME'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Token::Quote::Single  	''tags''
              PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Quote::Single  	''MKVIMRC''
            PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Word  	'catfile'
            PPI::Structure::List  	( ... )
              PPI::Token::Whitespace  	' '
              PPI::Statement::Expression
                PPI::Token::Symbol  	'$ENV'
                PPI::Structure::Subscript  	{ ... }
                  PPI::Statement::Expression
                    PPI::Token::Word  	'HOME'
                PPI::Token::Operator  	','
                PPI::Token::Whitespace  	' '
                PPI::Token::QuoteLike::Words  	'qw( config mk vimrc )'
              PPI::Token::Whitespace  	' '
            PPI::Token::Operator  	','
            PPI::Token::Whitespace  	'\n'
            PPI::Token::Whitespace  	'        '
            PPI::Token::Quote::Single  	''VIMRUNTIME''
            PPI::Token::Whitespace  	'  '
            PPI::Token::Operator  	'=>'
            PPI::Token::Whitespace  	' '
            PPI::Token::Symbol  	'$ENV'
            PPI::Structure::Subscript  	{ ... }
              PPI::Statement::Expression
                PPI::Token::Word  	'VIMRUNTIME'
            PPI::Token::Operator  	','
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement::Scheduled
    PPI::Token::Word  	'BEGIN'
    PPI::Token::Whitespace  	' '
    PPI::Structure::Block  	{ ... }
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'    '
      PPI::Statement
        PPI::Token::Word  	'eval'
        PPI::Token::Whitespace  	' '
        PPI::Token::Quote::Single  	''VIM::Eval("1")''
        PPI::Token::Structure  	';'
      PPI::Token::Whitespace  	'\n'
      PPI::Token::Whitespace  	'\n    '
      PPI::Statement::Compound
        PPI::Token::Word  	'unless'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Condition  	( ... )
          PPI::Statement::Expression
            PPI::Token::Magic  	'$@'
        PPI::Token::Whitespace  	' '
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$UnderVim'
            PPI::Token::Operator  	'='
            PPI::Token::Number  	'1'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'   \t\t'
          PPI::Statement
            PPI::Token::Word  	'init'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
        PPI::Token::Word  	'else'
        PPI::Structure::Block  	{ ... }
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement
            PPI::Token::Symbol  	'$UnderVim'
            PPI::Token::Operator  	'='
            PPI::Token::Number  	'0'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'        '
          PPI::Statement::Break
            PPI::Token::Word  	'return'
            PPI::Token::Structure  	';'
          PPI::Token::Whitespace  	'\n'
          PPI::Token::Whitespace  	'    '
      PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
  PPI::Statement
    PPI::Token::Number  	'1'
    PPI::Token::Structure  	';'
  PPI::Token::Whitespace  	'\n'
  PPI::Token::Whitespace  	'\n'
